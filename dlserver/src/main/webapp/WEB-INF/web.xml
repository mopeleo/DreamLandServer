<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_3_1.xsd">

	<display-name>dlserver</display-name>
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    
	<!--  spring3可以配置多套环境，通过此参数来进行选择
	      Spring3自定义环境配置 <beans profile="">
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>production</param-value>
	</context-param>
 	-->	
	
	<!-- 配置SpringMVC参数 -->  
   	<servlet>
    	<servlet-name>SpringMVC</servlet-name>
    	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>com.dl.server.websocket.DLWebSocketConfigurer</param-value>  
        </init-param>
        <init-param>
            <param-name>contextClass</param-name>
            <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>  
        </init-param>
     	<load-on-startup>1</load-on-startup>
     	<async-supported>true</async-supported>
   	</servlet>
   	  
	<!-- 这里可以用 / 但不能用 /* ,拦截了所有请求会导致静态资源无法访问，
		所以要在spring3-servlet.xml中配置mvc:resources -->
   	<servlet-mapping>
    	<servlet-name>SpringMVC</servlet-name>
    	<url-pattern>/</url-pattern>
   	</servlet-mapping>

    <!-- 允许跨域访问tomcat??? 有待验证
	<filter>
	   <filter-name>CorsFilter</filter-name>
	   <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
	   <init-param>
	       <param-name>cors.allowed.methods</param-name>
	       <param-value>GET,POST,HEAD,OPTIONS,PUT</param-value>
	   </init-param>
	   <init-param>
	       <param-name>cors.allowed.headers</param-name>
	       <param-value>Access-Control-Allow-Origin,Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
	   </init-param>
	   <async-supported>true</async-supported>
	</filter>
	<filter-mapping>
	   <filter-name>CorsFilter</filter-name>
	   <url-pattern>/*</url-pattern>
	</filter-mapping>
    -->
 
	<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--Spring ApplicationContext 载入 -->
    <!-- Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,号分隔  -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:spring/*.xml
            <!-- ,classpath*:/quartz.xml  -->
        </param-value>
    </context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 系统session文监听
	<listener>
		<listener-class>com.gezi.bmp.web.listener.SysSessionListener</listener-class>
	</listener>
    -->
 
	<!-- session超时定义,单位为分钟 -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<!-- 出错页面定义 -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/common/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/common/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/common/404.jsp</location>
	</error-page>
	
	<!-- 激活Tomcat的defaultServlet来处理静态文件 -->  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.jpg</url-pattern>  
    </servlet-mapping>  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.gif</url-pattern>  
    </servlet-mapping>  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.png</url-pattern>  
    </servlet-mapping>  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.js</url-pattern>  
    </servlet-mapping>  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.css</url-pattern>  
    </servlet-mapping> 
</web-app>
